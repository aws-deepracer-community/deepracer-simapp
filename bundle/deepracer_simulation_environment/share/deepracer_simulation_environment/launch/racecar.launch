<?xml version="1.0"?>
<launch>
  <arg name="kinesis_video_stream_name" />
  <arg name="kinesis_video_stream_region" default="us-east-1" />
  <arg name="body_shell_type" default="deepracer"/>
  <arg name="racecar_xacro_file" />
  <arg name="racecar_name" default="racecar"/>
  <arg name="racecar_bitmask" default="0x01"/>
  <arg name="publish_to_kinesis_stream" default="false"/>
  <arg name="make_required" default="true" />

  <arg name="include_second_camera" default="false" />
  <arg name="include_lidar_sensor" default="false" />

  <!-- Lidar 360 degree - settings -->
  <arg name="lidar_360_degree_sample" default="64" />
  <arg name="lidar_360_degree_horizontal_resolution" default="1" />
  <!-- Modifying the lidar angle to 300 degrees -->
  <arg name="lidar_360_degree_min_angle" default="-2.61799" />
  <arg name="lidar_360_degree_max_angle" default="2.61799" />
  <arg name="lidar_360_degree_min_range" default="0.15" />
  <arg name="lidar_360_degree_max_range" default="0.5" />
  <arg name="lidar_360_degree_range_resolution" default="0.01" />
  <arg name="lidar_360_degree_noise_mean" default="0.0" />
  <arg name="lidar_360_degree_noise_stddev" default="0.01" />

  <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find deepracer_simulation_environment)/urdf/$(arg racecar_xacro_file)/racecar.xacro'
      racecar_name:=$(arg racecar_name)
      racecar_bitmask:=$(arg racecar_bitmask)
      include_second_camera:=$(arg include_second_camera)
      include_lidar_sensor:=$(arg include_lidar_sensor)

      lidar_360_degree_sample:=$(arg lidar_360_degree_sample)
      lidar_360_degree_horizontal_resolution:=$(arg lidar_360_degree_horizontal_resolution)
      lidar_360_degree_min_angle:=$(arg lidar_360_degree_min_angle)
      lidar_360_degree_max_angle:=$(arg lidar_360_degree_max_angle)
      lidar_360_degree_min_range:=$(arg lidar_360_degree_min_range)
      lidar_360_degree_max_range:=$(arg lidar_360_degree_max_range)
      lidar_360_degree_range_resolution:=$(arg lidar_360_degree_range_resolution)
      lidar_360_degree_noise_mean:=$(arg lidar_360_degree_noise_mean)
      lidar_360_degree_noise_stddev:=$(arg lidar_360_degree_noise_stddev)
      body_shell_type:=$(arg body_shell_type)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="racecar_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param /$(arg racecar_name)/robot_description -model $(arg racecar_name) -z 0.05" />

  <!-- ros_control racecar launch file -->
  <include file="$(find deepracer_simulation_environment)/launch/racecar_control.launch">
    <arg name="racecar_name" value="$(arg racecar_name)"/>
    <arg name="make_required" value="$(arg make_required)"/>
  </include>

  <include file="$(find deepracer_simulation_environment)/launch/h264_video_encoder.launch" if="$(arg publish_to_kinesis_stream)">
    <arg name="config_file" value="$(find deepracer_simulation_environment)/config/racecar/deepracer_rpi_h264_encoder_config.yaml" />
    <arg name="image_transport" value="raw" />
    <arg name="make_required" value="$(arg make_required)"/>
    <arg name="racecar_name" value="$(arg racecar_name)" />
  </include>

  <include file="$(find deepracer_simulation_environment)/launch/kinesis_video_streamer.launch" if="$(arg publish_to_kinesis_stream)">
    <arg name="node_config_file" value="$(find deepracer_simulation_environment)/config/deepracer_node_config.yaml" />
    <arg name="stream_config_file" value="$(find deepracer_simulation_environment)/config/racecar/deepracer_stream_config.yaml" />
    <arg name="kinesis_video_stream_name" value="$(arg kinesis_video_stream_name)" />
    <arg name="kinesis_video_stream_region" value="$(arg kinesis_video_stream_region)" />
    <arg name="make_required" value="$(arg make_required)"/>
    <arg name="racecar_name" value="$(arg racecar_name)" />
  </include>

  

</launch>
